{
  "version": 4,
  "terraform_version": "0.14.2",
  "serial": 182,
  "lineage": "5a8c4aac-b913-f139-0c55-41e763dad241",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "security_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-2:301048516454:security-group/sg-0cfd234264e2c8adc",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0cfd234264e2c8adc",
            "ingress": [
              {
                "cidr_blocks": [
                  "172.31.0.0/16"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "90.216.134.192/26"
                ],
                "description": "",
                "from_port": 19999,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 19999
              },
              {
                "cidr_blocks": [
                  "90.216.134.192/26"
                ],
                "description": "",
                "from_port": 2222,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2222
              },
              {
                "cidr_blocks": [
                  "90.216.134.192/26"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "90.216.134.192/26"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "90.216.150.192/26"
                ],
                "description": "",
                "from_port": 19999,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 19999
              },
              {
                "cidr_blocks": [
                  "90.216.150.192/26"
                ],
                "description": "",
                "from_port": 2222,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2222
              },
              {
                "cidr_blocks": [
                  "90.216.150.192/26"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "90.216.150.192/26"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "name": "security_group",
            "name_prefix": "",
            "owner_id": "301048516454",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-73ed921a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.tech_test",
      "mode": "data",
      "type": "template_cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "gzip": false,
            "id": "60444770",
            "part": [
              {
                "content": "#!/bin/bash\n\nfunction create_new_user(){\nadduser sre_admin\nsudo usermod -aG wheel sre_admin\nmkdir -p /home/sre_admin/.ssh/\nsudo cp ~/.ssh/authorized_keys /home/sre_admin/.ssh/authorized_keys\n}\n\nfunction permit_root_login(){\nROOT_LOGIN=$(sudo cat /etc/ssh/sshd_config | grep PermitRootLogin | awk '{print $1}'| head -n 1)\nif [[ $ROOT_LOGIN == \"#PermitRootLogin\" ]]; then\n  echo \"Root login disabled\"\nelse\n  sudo sed -i 's/PermitRootLogin yes/#PermitRootLogin yes/g' /etc/ssh/sshd_config\n  sudo systemctl restart sshd\n  permit_root_login\nfi\n}\nfunction update_port(){\nsudo sed -i 's/#Port 22/Port 2222/g' /etc/ssh/sshd_config\n}\n\nfunction check_port(){\nNEW_PORT=$(sudo netstat -tulpn | grep sshd | awk '{print $4}' | head -n 1 | cut -f2 -d\":\")\nif [[ $NEW_PORT == \"2222\" ]]; then\n echo \"Port updated successfully\"\n sudo semanage port -a -t ssh_port_t -p tcp 2222\n sudo systemctl restart sshd\n exit 0;\nfi\n}\n\nfunction install_netdata(){\n  yum -y install epel-release -y\n  yum repolist\n  sudo yum install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig libuv-devel -y\n  sudo yum install curl jq nodejs -y\n  bash \u003c(curl -Ss https://my-netdata.io/kickstart.sh)\n  sudo yum install psmisc -y\n  sudo killall netdata\n  sudo cp ~/netdata/system/netdata.service /etc/systemd/system/\n  sudo systemctl daemon-reload\n  sudo systemctl start netdata.service\n  sudo systemctl enable netdata.service\n}\n\nfunction install_nginx(){\n  sudo yum install nginx -y\n  sudo systemctl start nginx\n  sudo systemctl enable nginx\n  sudo touch /etc/nginx/conf.d/default.conf\n  cat \u003e\u003e/etc/nginx/conf.d/default.conf \u003c\u003cEOF\nserver {\n  listen       80;\n  server_name  localhost;\n\n  location / {\n      root   /usr/share/nginx/html;\n      index  hellosky.html;\n  }\n}\nEOF\n  cat \u003e\u003e/usr/share/nginx/html/hellosky.html \u003c\u003cEOF\n\u003chtml\u003e\n  \u003chead\u003e\n      \u003ctitle\u003eHello Sky!\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n      \u003ch1\u003eHello Sky!\u003c/h1\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\nEOF\n  sudo nginx -t\n  sudo service nginx reload\n}\n\n\ncreate_new_user\npermit_root_login\nupdate_port\ncheck_port\ninstall_netdata\ninstall_nginx",
                "content_type": "text/x-shellscript",
                "filename": "",
                "merge_type": ""
              }
            ],
            "rendered": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSJNSU1FQk9VTkRBUlkiCk1JTUUtVmVyc2lvbjogMS4wDQoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdA0KTWltZS1WZXJzaW9uOiAxLjANCg0KIyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGNyZWF0ZV9uZXdfdXNlcigpewphZGR1c2VyIHNyZV9hZG1pbgpzdWRvIHVzZXJtb2QgLWFHIHdoZWVsIHNyZV9hZG1pbgpta2RpciAtcCAvaG9tZS9zcmVfYWRtaW4vLnNzaC8Kc3VkbyBjcCB+Ly5zc2gvYXV0aG9yaXplZF9rZXlzIC9ob21lL3NyZV9hZG1pbi8uc3NoL2F1dGhvcml6ZWRfa2V5cwp9CgpmdW5jdGlvbiBwZXJtaXRfcm9vdF9sb2dpbigpewpST09UX0xPR0lOPSQoc3VkbyBjYXQgL2V0Yy9zc2gvc3NoZF9jb25maWcgfCBncmVwIFBlcm1pdFJvb3RMb2dpbiB8IGF3ayAne3ByaW50ICQxfSd8IGhlYWQgLW4gMSkKaWYgW1sgJFJPT1RfTE9HSU4gPT0gIiNQZXJtaXRSb290TG9naW4iIF1dOyB0aGVuCiAgZWNobyAiUm9vdCBsb2dpbiBkaXNhYmxlZCIKZWxzZQogIHN1ZG8gc2VkIC1pICdzL1Blcm1pdFJvb3RMb2dpbiB5ZXMvI1Blcm1pdFJvb3RMb2dpbiB5ZXMvZycgL2V0Yy9zc2gvc3NoZF9jb25maWcKICBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IHNzaGQKICBwZXJtaXRfcm9vdF9sb2dpbgpmaQp9CmZ1bmN0aW9uIHVwZGF0ZV9wb3J0KCl7CnN1ZG8gc2VkIC1pICdzLyNQb3J0IDIyL1BvcnQgMjIyMi9nJyAvZXRjL3NzaC9zc2hkX2NvbmZpZwp9CgpmdW5jdGlvbiBjaGVja19wb3J0KCl7Ck5FV19QT1JUPSQoc3VkbyBuZXRzdGF0IC10dWxwbiB8IGdyZXAgc3NoZCB8IGF3ayAne3ByaW50ICQ0fScgfCBoZWFkIC1uIDEgfCBjdXQgLWYyIC1kIjoiKQppZiBbWyAkTkVXX1BPUlQgPT0gIjIyMjIiIF1dOyB0aGVuCiBlY2hvICJQb3J0IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5Igogc3VkbyBzZW1hbmFnZSBwb3J0IC1hIC10IHNzaF9wb3J0X3QgLXAgdGNwIDIyMjIKIHN1ZG8gc3lzdGVtY3RsIHJlc3RhcnQgc3NoZAogZXhpdCAwOwpmaQp9CgpmdW5jdGlvbiBpbnN0YWxsX25ldGRhdGEoKXsKICB5dW0gLXkgaW5zdGFsbCBlcGVsLXJlbGVhc2UgLXkKICB5dW0gcmVwb2xpc3QKICBzdWRvIHl1bSBpbnN0YWxsIHpsaWItZGV2ZWwgbGlidXVpZC1kZXZlbCBsaWJtbmwtZGV2ZWwgZ2NjIG1ha2UgZ2l0IGF1dG9jb25mIGF1dG9nZW4gYXV0b21ha2UgcGtnY29uZmlnIGxpYnV2LWRldmVsIC15CiAgc3VkbyB5dW0gaW5zdGFsbCBjdXJsIGpxIG5vZGVqcyAteQogIGJhc2ggPChjdXJsIC1TcyBodHRwczovL215LW5ldGRhdGEuaW8va2lja3N0YXJ0LnNoKQogIHN1ZG8geXVtIGluc3RhbGwgcHNtaXNjIC15CiAgc3VkbyBraWxsYWxsIG5ldGRhdGEKICBzdWRvIGNwIH4vbmV0ZGF0YS9zeXN0ZW0vbmV0ZGF0YS5zZXJ2aWNlIC9ldGMvc3lzdGVtZC9zeXN0ZW0vCiAgc3VkbyBzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZAogIHN1ZG8gc3lzdGVtY3RsIHN0YXJ0IG5ldGRhdGEuc2VydmljZQogIHN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBuZXRkYXRhLnNlcnZpY2UKfQoKZnVuY3Rpb24gaW5zdGFsbF9uZ2lueCgpewogIHN1ZG8geXVtIGluc3RhbGwgbmdpbnggLXkKICBzdWRvIHN5c3RlbWN0bCBzdGFydCBuZ2lueAogIHN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBuZ2lueAogIHN1ZG8gdG91Y2ggL2V0Yy9uZ2lueC9jb25mLmQvZGVmYXVsdC5jb25mCiAgY2F0ID4+L2V0Yy9uZ2lueC9jb25mLmQvZGVmYXVsdC5jb25mIDw8RU9GCnNlcnZlciB7CiAgbGlzdGVuICAgICAgIDgwOwogIHNlcnZlcl9uYW1lICBsb2NhbGhvc3Q7CgogIGxvY2F0aW9uIC8gewogICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOwogICAgICBpbmRleCAgaGVsbG9za3kuaHRtbDsKICB9Cn0KRU9GCiAgY2F0ID4+L3Vzci9zaGFyZS9uZ2lueC9odG1sL2hlbGxvc2t5Lmh0bWwgPDxFT0YKPGh0bWw+CiAgPGhlYWQ+CiAgICAgIDx0aXRsZT5IZWxsbyBTa3khPC90aXRsZT4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICAgIDxoMT5IZWxsbyBTa3khPC9oMT4KICA8L2JvZHk+CjwvaHRtbD4KRU9GCiAgc3VkbyBuZ2lueCAtdAogIHN1ZG8gc2VydmljZSBuZ2lueCByZWxvYWQKfQoKCmNyZWF0ZV9uZXdfdXNlcgpwZXJtaXRfcm9vdF9sb2dpbgp1cGRhdGVfcG9ydApjaGVja19wb3J0Cmluc3RhbGxfbmV0ZGF0YQppbnN0YWxsX25naW54DQotLU1JTUVCT1VOREFSWS0tDQo="
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.tech_test",
      "mode": "data",
      "type": "template_file",
      "name": "script",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "6a61f1ecee543cd5b14315b67e9bcd8d8cf3d9be32aeb5180d2fc073932be381",
            "rendered": "#!/bin/bash\n\nfunction create_new_user(){\nadduser sre_admin\nsudo usermod -aG wheel sre_admin\nmkdir -p /home/sre_admin/.ssh/\nsudo cp ~/.ssh/authorized_keys /home/sre_admin/.ssh/authorized_keys\n}\n\nfunction permit_root_login(){\nROOT_LOGIN=$(sudo cat /etc/ssh/sshd_config | grep PermitRootLogin | awk '{print $1}'| head -n 1)\nif [[ $ROOT_LOGIN == \"#PermitRootLogin\" ]]; then\n  echo \"Root login disabled\"\nelse\n  sudo sed -i 's/PermitRootLogin yes/#PermitRootLogin yes/g' /etc/ssh/sshd_config\n  sudo systemctl restart sshd\n  permit_root_login\nfi\n}\nfunction update_port(){\nsudo sed -i 's/#Port 22/Port 2222/g' /etc/ssh/sshd_config\n}\n\nfunction check_port(){\nNEW_PORT=$(sudo netstat -tulpn | grep sshd | awk '{print $4}' | head -n 1 | cut -f2 -d\":\")\nif [[ $NEW_PORT == \"2222\" ]]; then\n echo \"Port updated successfully\"\n sudo semanage port -a -t ssh_port_t -p tcp 2222\n sudo systemctl restart sshd\n exit 0;\nfi\n}\n\nfunction install_netdata(){\n  yum -y install epel-release -y\n  yum repolist\n  sudo yum install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig libuv-devel -y\n  sudo yum install curl jq nodejs -y\n  bash \u003c(curl -Ss https://my-netdata.io/kickstart.sh)\n  sudo yum install psmisc -y\n  sudo killall netdata\n  sudo cp ~/netdata/system/netdata.service /etc/systemd/system/\n  sudo systemctl daemon-reload\n  sudo systemctl start netdata.service\n  sudo systemctl enable netdata.service\n}\n\nfunction install_nginx(){\n  sudo yum install nginx -y\n  sudo systemctl start nginx\n  sudo systemctl enable nginx\n  sudo touch /etc/nginx/conf.d/default.conf\n  cat \u003e\u003e/etc/nginx/conf.d/default.conf \u003c\u003cEOF\nserver {\n  listen       80;\n  server_name  localhost;\n\n  location / {\n      root   /usr/share/nginx/html;\n      index  hellosky.html;\n  }\n}\nEOF\n  cat \u003e\u003e/usr/share/nginx/html/hellosky.html \u003c\u003cEOF\n\u003chtml\u003e\n  \u003chead\u003e\n      \u003ctitle\u003eHello Sky!\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n      \u003ch1\u003eHello Sky!\u003c/h1\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\nEOF\n  sudo nginx -t\n  sudo service nginx reload\n}\n\n\ncreate_new_user\npermit_root_login\nupdate_port\ncheck_port\ninstall_netdata\ninstall_nginx",
            "template": "#!/bin/bash\n\nfunction create_new_user(){\nadduser ${USER}\nsudo usermod -aG wheel ${USER}\nmkdir -p /home/${USER}/.ssh/\nsudo cp ~/.ssh/authorized_keys /home/${USER}/.ssh/authorized_keys\n}\n\nfunction permit_root_login(){\nROOT_LOGIN=$(sudo cat /etc/ssh/sshd_config | grep PermitRootLogin | awk '{print $1}'| head -n 1)\nif [[ $ROOT_LOGIN == \"#PermitRootLogin\" ]]; then\n  echo \"Root login disabled\"\nelse\n  sudo sed -i 's/PermitRootLogin yes/#PermitRootLogin yes/g' /etc/ssh/sshd_config\n  sudo systemctl restart sshd\n  permit_root_login\nfi\n}\nfunction update_port(){\nsudo sed -i 's/#Port 22/Port 2222/g' /etc/ssh/sshd_config\n}\n\nfunction check_port(){\nNEW_PORT=$(sudo netstat -tulpn | grep sshd | awk '{print $4}' | head -n 1 | cut -f2 -d\":\")\nif [[ $NEW_PORT == \"2222\" ]]; then\n echo \"Port updated successfully\"\n sudo semanage port -a -t ssh_port_t -p tcp 2222\n sudo systemctl restart sshd\n exit 0;\nfi\n}\n\nfunction install_netdata(){\n  yum -y install epel-release -y\n  yum repolist\n  sudo yum install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig libuv-devel -y\n  sudo yum install curl jq nodejs -y\n  bash \u003c(curl -Ss https://my-netdata.io/kickstart.sh)\n  sudo yum install psmisc -y\n  sudo killall netdata\n  sudo cp ~/netdata/system/netdata.service /etc/systemd/system/\n  sudo systemctl daemon-reload\n  sudo systemctl start netdata.service\n  sudo systemctl enable netdata.service\n}\n\nfunction install_nginx(){\n  sudo yum install nginx -y\n  sudo systemctl start nginx\n  sudo systemctl enable nginx\n  sudo touch /etc/nginx/conf.d/default.conf\n  cat \u003e\u003e/etc/nginx/conf.d/default.conf \u003c\u003cEOF\nserver {\n  listen       80;\n  server_name  localhost;\n\n  location / {\n      root   /usr/share/nginx/html;\n      index  hellosky.html;\n  }\n}\nEOF\n  cat \u003e\u003e/usr/share/nginx/html/hellosky.html \u003c\u003cEOF\n\u003chtml\u003e\n  \u003chead\u003e\n      \u003ctitle\u003eHello Sky!\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n      \u003ch1\u003eHello Sky!\u003c/h1\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\nEOF\n  sudo nginx -t\n  sudo service nginx reload\n}\n\n\ncreate_new_user\npermit_root_login\nupdate_port\ncheck_port\ninstall_netdata\ninstall_nginx",
            "vars": {
              "USER": "sre_admin"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.tech_test",
      "mode": "managed",
      "type": "aws_instance",
      "name": "instance",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0b22fcaf3564fb0c9",
            "arn": "arn:aws:ec2:eu-west-2:301048516454:instance/i-049ba3bbf72d5f3b8",
            "associate_public_ip_address": true,
            "availability_zone": "eu-west-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-049ba3bbf72d5f3b8",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "admin_key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-088fbd621438e3d03",
            "private_dns": "ip-172-31-7-177.eu-west-2.compute.internal",
            "private_ip": "172.31.7.177",
            "public_dns": "ec2-35-176-131-181.eu-west-2.compute.amazonaws.com",
            "public_ip": "35.176.131.181",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0faee2b7a657cfc5f",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "security_group"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-b380e9c8",
            "tags": {
              "Name": "test_instance"
            },
            "tags_all": {
              "Name": "test_instance"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSJNSU1FQk9VTkRBUlkiCk1JTUUtVmVyc2lvbjogMS4wDQoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdA0KTWltZS1WZXJzaW9uOiAxLjANCg0KIyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGNyZWF0ZV9uZXdfdXNlcigpewphZGR1c2VyIHNyZV9hZG1pbgpzdWRvIHVzZXJtb2QgLWFHIHdoZWVsIHNyZV9hZG1pbgpta2RpciAtcCAvaG9tZS9zcmVfYWRtaW4vLnNzaC8Kc3VkbyBjcCB+Ly5zc2gvYXV0aG9yaXplZF9rZXlzIC9ob21lL3NyZV9hZG1pbi8uc3NoL2F1dGhvcml6ZWRfa2V5cwp9CgpmdW5jdGlvbiBwZXJtaXRfcm9vdF9sb2dpbigpewpST09UX0xPR0lOPSQoc3VkbyBjYXQgL2V0Yy9zc2gvc3NoZF9jb25maWcgfCBncmVwIFBlcm1pdFJvb3RMb2dpbiB8IGF3ayAne3ByaW50ICQxfSd8IGhlYWQgLW4gMSkKaWYgW1sgJFJPT1RfTE9HSU4gPT0gIiNQZXJtaXRSb290TG9naW4iIF1dOyB0aGVuCiAgZWNobyAiUm9vdCBsb2dpbiBkaXNhYmxlZCIKZWxzZQogIHN1ZG8gc2VkIC1pICdzL1Blcm1pdFJvb3RMb2dpbiB5ZXMvI1Blcm1pdFJvb3RMb2dpbiB5ZXMvZycgL2V0Yy9zc2gvc3NoZF9jb25maWcKICBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IHNzaGQKICBwZXJtaXRfcm9vdF9sb2dpbgpmaQp9CmZ1bmN0aW9uIHVwZGF0ZV9wb3J0KCl7CnN1ZG8gc2VkIC1pICdzLyNQb3J0IDIyL1BvcnQgMjIyMi9nJyAvZXRjL3NzaC9zc2hkX2NvbmZpZwp9CgpmdW5jdGlvbiBjaGVja19wb3J0KCl7Ck5FV19QT1JUPSQoc3VkbyBuZXRzdGF0IC10dWxwbiB8IGdyZXAgc3NoZCB8IGF3ayAne3ByaW50ICQ0fScgfCBoZWFkIC1uIDEgfCBjdXQgLWYyIC1kIjoiKQppZiBbWyAkTkVXX1BPUlQgPT0gIjIyMjIiIF1dOyB0aGVuCiBlY2hvICJQb3J0IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5Igogc3VkbyBzZW1hbmFnZSBwb3J0IC1hIC10IHNzaF9wb3J0X3QgLXAgdGNwIDIyMjIKIHN1ZG8gc3lzdGVtY3RsIHJlc3RhcnQgc3NoZAogZXhpdCAwOwpmaQp9CgpmdW5jdGlvbiBpbnN0YWxsX25ldGRhdGEoKXsKICB5dW0gLXkgaW5zdGFsbCBlcGVsLXJlbGVhc2UgLXkKICB5dW0gcmVwb2xpc3QKICBzdWRvIHl1bSBpbnN0YWxsIHpsaWItZGV2ZWwgbGlidXVpZC1kZXZlbCBsaWJtbmwtZGV2ZWwgZ2NjIG1ha2UgZ2l0IGF1dG9jb25mIGF1dG9nZW4gYXV0b21ha2UgcGtnY29uZmlnIGxpYnV2LWRldmVsIC15CiAgc3VkbyB5dW0gaW5zdGFsbCBjdXJsIGpxIG5vZGVqcyAteQogIGJhc2ggPChjdXJsIC1TcyBodHRwczovL215LW5ldGRhdGEuaW8va2lja3N0YXJ0LnNoKQogIHN1ZG8geXVtIGluc3RhbGwgcHNtaXNjIC15CiAgc3VkbyBraWxsYWxsIG5ldGRhdGEKICBzdWRvIGNwIH4vbmV0ZGF0YS9zeXN0ZW0vbmV0ZGF0YS5zZXJ2aWNlIC9ldGMvc3lzdGVtZC9zeXN0ZW0vCiAgc3VkbyBzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZAogIHN1ZG8gc3lzdGVtY3RsIHN0YXJ0IG5ldGRhdGEuc2VydmljZQogIHN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBuZXRkYXRhLnNlcnZpY2UKfQoKZnVuY3Rpb24gaW5zdGFsbF9uZ2lueCgpewogIHN1ZG8geXVtIGluc3RhbGwgbmdpbnggLXkKICBzdWRvIHN5c3RlbWN0bCBzdGFydCBuZ2lueAogIHN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBuZ2lueAogIHN1ZG8gdG91Y2ggL2V0Yy9uZ2lueC9jb25mLmQvZGVmYXVsdC5jb25mCiAgY2F0ID4+L2V0Yy9uZ2lueC9jb25mLmQvZGVmYXVsdC5jb25mIDw8RU9GCnNlcnZlciB7CiAgbGlzdGVuICAgICAgIDgwOwogIHNlcnZlcl9uYW1lICBsb2NhbGhvc3Q7CgogIGxvY2F0aW9uIC8gewogICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOwogICAgICBpbmRleCAgaGVsbG9za3kuaHRtbDsKICB9Cn0KRU9GCiAgY2F0ID4+L3Vzci9zaGFyZS9uZ2lueC9odG1sL2hlbGxvc2t5Lmh0bWwgPDxFT0YKPGh0bWw+CiAgPGhlYWQ+CiAgICAgIDx0aXRsZT5IZWxsbyBTa3khPC90aXRsZT4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICAgIDxoMT5IZWxsbyBTa3khPC9oMT4KICA8L2JvZHk+CjwvaHRtbD4KRU9GCiAgc3VkbyBuZ2lueCAtdAogIHN1ZG8gc2VydmljZSBuZ2lueCByZWxvYWQKfQoKCmNyZWF0ZV9uZXdfdXNlcgpwZXJtaXRfcm9vdF9sb2dpbgp1cGRhdGVfcG9ydApjaGVja19wb3J0Cmluc3RhbGxfbmV0ZGF0YQppbnN0YWxsX25naW54DQotLU1JTUVCT1VOREFSWS0tDQo=",
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0cfd234264e2c8adc"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.security_group",
            "module.tech_test.data.template_cloudinit_config.config"
          ]
        }
      ]
    },
    {
      "module": "module.tech_test",
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "tech_test",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-2:301048516454:key-pair/admin_key",
            "fingerprint": "fa:48:77:6e:7b:e7:dd:bd:c1:bd:2a:7b:54:47:03:a8",
            "id": "admin_key",
            "key_name": "admin_key",
            "key_name_prefix": null,
            "key_pair_id": "key-0aef664f7ae074722",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCgDstIk4DNKx0CJ1QeEfVubxqcGpUL4lKG59A94n4nyzqAIgeldkq68KWEWmBdTudTFxTuy57dTPQq/LBLidM2qQBSC97V8L0CDF5vqdbrsd8lFGgJMOwuPyOJM/W65TGKSpW7vecDKDb9bSVZXg3OxylgCr53kKDFaLDnXQoSxrxrNsOHwsGmBURrf+N/WC2I8M7qYLwUGgXbD/COCA7Q9wEJfGSc4xO/XdKwOdn8zpsHjCajE7QkQ+YP5YPN+AYjFRBOpGIWLthqXJqy5CeDaNDPuq+EWYeYj2vnCw/soWE9x9MDvEZaoSRqCQ6Xod7QKB5ZFTCT7sqMgVIlvceEJ0U++VIHe+Vk0SDNOuOzOjJnRojkdrTT76p2l9nKvJi3uwjHeDN0lqo6J4pKULQD8ScY4T2yjIw0by6EQf7oaSNfBIpdxpwZgGFzGPBHS82vT/xtKhWEqXGzLVBTrtd0EiDf8a33FV+ZdRNK75u9+JW3r7mlmi3lfXb+3n3EiLs=",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ]
}
